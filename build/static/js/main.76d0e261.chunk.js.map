{"version":3,"sources":["socketio.js","Main.js","Game.js","App.js","serviceWorker.js","index.js","xo.jpg"],"names":["socket","io","Main","useState","username","setusername","open","setOpen","handleClose","history","useHistory","link","require","className","style","height","display","alignItems","justifyContent","backgroundImage","backgroundRepeat","backgroundSize","InputLabel","Input","value","onChange","e","target","Button","variant","onClick","innerText","emit","on","push","color","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","Game","state","player","refs","play","i","index","map","ref","current","disabled","showgrids","items","newRef","createRef","key","setState","alert","data","count","this","Component","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.76d0e261.chunk.js","sourcesContent":["import io from 'socket.io-client';\nlet socket=io();\nexport default socket\n","import React,{useState} from 'react'\nimport { Input,InputLabel,Button,Dialog,DialogActions,DialogTitle,DialogContent ,DialogContentText} from '@material-ui/core';\nimport {useHistory} from 'react-router-dom'\nimport socket from './socketio'\nexport default function Main() {\nconst [username, setusername] = useState('');\nlet [open, setOpen] = useState(false);\nconst handleClose = () => {\n    setOpen(false);\n  };\nconst history = useHistory();\nlet Search=(e)=>{\n\nif(username==='') return setOpen(true)\ne.target.innerText='SEARCHING...'\nsocket.emit('searching',{username})\nsocket.on('game_started',()=>{\nhistory.push(\"play\");\n})\n}\nlet link=require('./xo.jpg');\n\n    return (\n\n        <div className=\"flex-column\" style={{height:'100vh',display:'flex',alignItems:'center',justifyContent:'center',backgroundImage:`url(${link})`,backgroundRepeat:'no-repeat',backgroundSize:'cover'}}>\n        <InputLabel className=\"mb-3\">ENTER YOUR USERNAME</InputLabel><Input className=\"mb-3\" value={username} onChange={e=>setusername(e.target.value)}/>\n        <Button variant=\"contained\" onClick={Search}  color=\"secondary\" className=\"mt-5\">SEARCH FOR OPPONENT</Button>\n        <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Error\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Please Enter a Valid Username\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n        </div>\n     \n    )\n}\n","import { createRef } from \"react\";\nimport \"./Game.css\";\nimport socket from \"./socketio\";\nimport React, { Component } from \"react\";\n\nexport class Game extends Component {\n  state = {\n    player: \"\",\n    refs: [],\n    play: (e, i) => {\n      if (e.target.innerText === \"\") {\n        socket.emit(\"turnover\", { index: i, player: this.state.player });\n        socket.emit(\"turn_finish\", { player: this.state.player });\n        this.state.refs.map((ref) => {\n          return (ref.current.disabled = true);\n        });\n      }\n    },\n    showgrids: () => {\n      let items = [];\n      for (let i = 0; i < 9; i++) {\n        let newRef = createRef();\n\n        this.state.refs.push(newRef);\n\n        items.push(\n          <button\n            className=\"grid-item\"\n            ref={newRef}\n            key={i}\n            onClick={(e) => this.state.play(e, i)}\n            disabled={false}\n           \n          ></button>\n        );\n      }\n      return items;\n    },\n  };\n  componentDidMount() {\n    socket.emit(\"ingame\");\n    socket.on(\"your_turn\", () => {\n      this.state.refs.map((ref) => {\n        return (ref.current.disabled = false);\n      });\n    });\n    socket.on(\"not_your_turn\", () => {\n      this.state.refs.map((ref) => {\n        return (ref.current.disabled = true);\n      });\n    });\n    socket.on(\"playerX\", () => {\n      this.setState({ player: \"X\" });\n    });\n    socket.on(\"playerO\", () => {\n      this.setState({ player: \"O\" });\n    });\n    socket.on(\"xWon\", () => {\n      alert(\"X won!\");\n      this.state.refs.map((ref) => {\n        return (ref.current.innerText = \"\");\n      });\n    });\n    socket.on(\"OWon\", () => {\n      alert(\"O won!\");\n      this.state.refs.map((ref) => {\n        ref.current.innerText = \"\";\n      });\n    });\n    socket.on('drw',()=>{\n      alert(\"Draw!\");\n      this.state.refs.map((ref) => {\n        return (ref.current.innerText = \"\");\n      });\n    })\n    socket.on(\"playdone\", (data) => {\n      this.state.refs[data.index].current.innerText = data.player;\n    \n\n      if (\n        this.state.refs[0].current.innerText ===\n          this.state.refs[1].current.innerText &&\n        this.state.refs[1].current.innerText ===\n          this.state.refs[2].current.innerText &&\n        this.state.refs[1].current.innerText === \"X\"\n      ) {\n      \n        socket.emit(\"winnerX\");\n      } else if (\n        this.state.refs[3].current.innerText ===\n          this.state.refs[4].current.innerText &&\n        this.state.refs[4].current.innerText ===\n          this.state.refs[5].current.innerText &&\n        this.state.refs[4].current.innerText === \"X\"\n      ) {\n        socket.emit(\"winnerX\");\n      } else if (\n        this.state.refs[6].current.innerText ===\n          this.state.refs[7].current.innerText &&\n        this.state.refs[7].current.innerText ===\n          this.state.refs[8].current.innerText &&\n        this.state.refs[7].current.innerText === \"X\"\n      ) {\n        socket.emit(\"winnerX\");\n      } else if (\n        this.state.refs[0].current.innerText ===\n          this.state.refs[4].current.innerText &&\n        this.state.refs[4].current.innerText ===\n          this.state.refs[8].current.innerText &&\n        this.state.refs[4].current.innerText === \"X\"\n      ) {\n        socket.emit(\"winnerX\");\n      } else if (\n        this.state.refs[2].current.innerText ===\n          this.state.refs[4].current.innerText &&\n        this.state.refs[4].current.innerText ===\n          this.state.refs[6].current.innerText &&\n        this.state.refs[4].current.innerText === \"X\"\n      ) {\n        socket.emit(\"winnerX\");\n      } else if (\n        this.state.refs[0].current.innerText ===\n          this.state.refs[3].current.innerText &&\n        this.state.refs[3].current.innerText ===\n          this.state.refs[6].current.innerText &&\n        this.state.refs[3].current.innerText === \"X\"\n      ) {\n        socket.emit(\"winnerX\");\n      } else if (\n        this.state.refs[1].current.innerText ===\n          this.state.refs[4].current.innerText &&\n        this.state.refs[4].current.innerText ===\n          this.state.refs[7].current.innerText &&\n        this.state.refs[4].current.innerText === \"X\"\n      ) {\n        socket.emit(\"winnerX\");\n      } else if (\n        this.state.refs[2].current.innerText ===\n          this.state.refs[5].current.innerText &&\n        this.state.refs[5].current.innerText ===\n          this.state.refs[8].current.innerText &&\n        this.state.refs[5].current.innerText === \"X\"\n      ) {\n        socket.emit(\"winnerX\");\n      }\n      /////////////\n      else if (\n        this.state.refs[0].current.innerText ===\n          this.state.refs[1].current.innerText &&\n        this.state.refs[1].current.innerText ===\n          this.state.refs[2].current.innerText &&\n        this.state.refs[1].current.innerText === \"O\"\n      ) {\n        socket.emit(\"winnerO\");\n      } else if (\n        this.state.refs[3].current.innerText ===\n          this.state.refs[4].current.innerText &&\n        this.state.refs[4].current.innerText ===\n          this.state.refs[5].current.innerText &&\n        this.state.refs[4].current.innerText === \"O\"\n      ) {\n        socket.emit(\"winnerO\");\n      } else if (\n        this.state.refs[6].current.innerText ===\n          this.state.refs[7].current.innerText &&\n        this.state.refs[7].current.innerText ===\n          this.state.refs[8].current.innerText &&\n        this.state.refs[7].current.innerText === \"O\"\n      ) {\n        socket.emit(\"winnerO\");\n      } else if (\n        this.state.refs[0].current.innerText ===\n          this.state.refs[4].current.innerText &&\n        this.state.refs[4].current.innerText ===\n          this.state.refs[8].current.innerText &&\n        this.state.refs[4].current.innerText === \"O\"\n      ) {\n        socket.emit(\"winnerO\");\n      } else if (\n        this.state.refs[2].current.innerText ===\n          this.state.refs[4].current.innerText &&\n        this.state.refs[4].current.innerText ===\n          this.state.refs[6].current.innerText &&\n        this.state.refs[4].current.innerText === \"O\"\n      ) {\n        socket.emit(\"winnerO\");\n      } else if (\n        this.state.refs[0].current.innerText ===\n          this.state.refs[3].current.innerText &&\n        this.state.refs[3].current.innerText ===\n          this.state.refs[6].current.innerText &&\n        this.state.refs[3].current.innerText === \"O\"\n      ) {\n        socket.emit(\"winnerO\");\n      } else if (\n        this.state.refs[1].current.innerText ===\n          this.state.refs[4].current.innerText &&\n        this.state.refs[4].current.innerText ===\n          this.state.refs[7].current.innerText &&\n        this.state.refs[4].current.innerText === \"O\"\n      ) {\n        socket.emit(\"winnerO\");\n      } else if (\n        this.state.refs[2].current.innerText ===\n          this.state.refs[5].current.innerText &&\n        this.state.refs[5].current.innerText ===\n          this.state.refs[8].current.innerText &&\n        this.state.refs[5].current.innerText === \"O\"\n      ) {\n        socket.emit(\"winnerO\");\n      } else {\n        let count=0;\n        this.state.refs.map((ref)=>{\n          if(ref.current.innerText!=''){\n            count++;\n          }\n          \n        })\n        if(count===9){\n          socket.emit(\"draw\");\n          count=0;\n        }\n       \n      }\n    });\n  }\n\n  render() {\n    let link = require(\"./xo.jpg\");\n    if (this.state.player) {\n      return (\n        <div\n          style={{\n            height: \"100vh\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundImage: `url(${link})`,\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\",\n          }}\n        >\n          <div className=\"grid-container\">{this.state.showgrids()}</div>\n        </div>\n      );\n    } else {\n      return <div>Loading...</div>;\n    }\n  }\n}\n\nexport default Game;\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./Main\";\nimport Game from './Game'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n      <Switch>\n          <Route exact path=\"/\">\n            <Main />\n          </Route>\n          <Route exact path=\"/play\">\n            <Game />\n          </Route>\n        </Switch>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/xo.6ce8414b.jpg\";"],"sourceRoot":""}